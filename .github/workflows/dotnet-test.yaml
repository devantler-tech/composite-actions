name: Test .NET solution or project
permissions:
  packages: read
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
    inputs:
      DEPENDENCY:
        type: string
        description: The GitHub repo in which the binary is hosted
  pull_request:
  merge_group:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    steps:
      - name: Generate GitHub App Token
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: 📑 Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          token: ${{ steps.generate-token.outputs.token }}
      - name: 📦 Install dependency
        uses: jaxxstorm/action-install-gh-release@v1.14.0
        if: inputs.DEPENDENCY
        with:
          repo: ${{ inputs.DEPENDENCY }}
      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9
      - name: 🚚 Add GHCR as NuGet feed
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      - name: 🧪 Test
        run: dotnet test --collect:"XPlat Code Coverage" --logger "console;verbosity=detailed"
      - name: 📄 Get Coverage Files
        id: get_coverage_files
        if: matrix.os != 'windows-latest'
        run: |
          coverage_files=$(find . -name 'coverage.cobertura.xml' -print0 | tr '\0' ',' | sed 's/,$//')
          echo "COVERAGE_FILES=$coverage_files" >> "$GITHUB_OUTPUT"
      - name: 📄 Get Coverage Files on Windows
        id: get_coverage_files_windows
        if: matrix.os == 'windows-latest'
        run: |
          $coverage_files = Get-ChildItem -Path . -Recurse -Filter coverage.cobertura.xml -ErrorAction SilentlyContinue | ForEach-Object { $_.FullName }
          $coverage_files = $coverage_files -join ','
          echo "COVERAGE_FILES=$coverage_files" >> "$GITHUB_OUTPUT"
      - name: 📄 Upload Code Coverage to CodeCov
        uses: codecov/codecov-action@v5
        with:
          files: ${{ steps.get_coverage_files.outputs.COVERAGE_FILES }}
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
